import React, { useState } from 'react';
import { Box, Typography, Paper, Button, Stack, Chip, List, ListItem, Divider } from '@mui/material';
import ContentCopyIcon from '@mui/icons-material/ContentCopy';
import EditIcon from '@mui/icons-material/Edit';
import DeleteIcon from '@mui/icons-material/Delete';
import ShareIcon from '@mui/icons-material/Share';

// –î–µ–º–æ-–ø—Ä–æ—Ç–æ–∫–æ–ª—ã
const DEMO_PROTOCOLS = [
  {
    id: 1,
    title: '–ó–¥–æ—Ä–æ–≤—ã–π —Å–æ–Ω',
    icon: 'üò¥',
    tags: ['—Å–æ–Ω', '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ'],
    description: '–ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Å–Ω–∞.',
    steps: [
      { icon: 'üïô', text: '–õ–æ–∂–∏—Ç—å—Å—è —Å–ø–∞—Ç—å –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è' },
      { icon: 'üìµ', text: '–ó–∞ 2 —á–∞—Å–∞ –¥–æ —Å–Ω–∞ ‚Äî –±–µ–∑ –≥–∞–¥–∂–µ—Ç–æ–≤' },
      { icon: 'üå¨Ô∏è', text: '–ü—Ä–æ–≤–µ—Ç—Ä–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É –ø–µ—Ä–µ–¥ —Å–Ω–æ–º' },
      { icon: 'üíä', text: '–ü—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞–≥–Ω–∏–π –≤–µ—á–µ—Ä–æ–º' },
    ],
    author: 'demo',
  },
  {
    id: 2,
    title: '–£—Ç—Ä–µ–Ω–Ω—è—è —ç–Ω–µ—Ä–≥–∏—è',
    icon: '‚òÄÔ∏è',
    tags: ['—ç–Ω–µ—Ä–≥–∏—è', '—É—Ç—Ä–æ'],
    description: '–ü—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è –±–æ–¥—Ä–æ–≥–æ –Ω–∞—á–∞–ª–∞ –¥–Ω—è.',
    steps: [
      { icon: 'üíß', text: '–°—Ç–∞–∫–∞–Ω –≤–æ–¥—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è' },
      { icon: 'ü§∏', text: '10 –º–∏–Ω—É—Ç —Ä–∞—Å—Ç—è–∂–∫–∏ –∏–ª–∏ –∑–∞—Ä—è–¥–∫–∏' },
      { icon: 'üöø', text: '–ö–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π –¥—É—à' },
      { icon: 'üç≥', text: '–ó–∞–≤—Ç—Ä–∞–∫ —Å –±–µ–ª–∫–æ–º –∏ –∫–ª–µ—Ç—á–∞—Ç–∫–æ–π' },
    ],
    author: 'demo',
  },
  {
    id: 3,
    title: '–î–µ—Ç–æ–∫—Å –ø–æ—Å–ª–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤',
    icon: 'ü•¶',
    tags: ['–¥–µ—Ç–æ–∫—Å', '–ø–∏—Ç–∞–Ω–∏–µ'],
    description: '–õ—ë–≥–∫–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏—è.',
    steps: [
      { icon: 'üö´üç¨üç∑', text: '–î–µ–Ω—å –±–µ–∑ —Å–∞—Ö–∞—Ä–∞ –∏ –∞–ª–∫–æ–≥–æ–ª—è' },
      { icon: 'üíß', text: '2 –ª–∏—Ç—Ä–∞ –≤–æ–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è' },
      { icon: 'ü•ó', text: '–û–≤–æ—â–∏ –≤ –∫–∞–∂–¥–æ–º –ø—Ä–∏—ë–º–µ –ø–∏—â–∏' },
      { icon: 'üö∂', text: '–ü—Ä–æ–≥—É–ª–∫–∞ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ 30 –º–∏–Ω—É—Ç' },
    ],
    author: 'demo',
  },
];

export default function DashboardPage() {
  const [protocols, setProtocols] = useState(DEMO_PROTOCOLS);

  // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
  const handleFork = (protocol) => alert(`–§–æ—Ä–∫ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞: ${protocol.title}`);
  const handleEdit = (protocol) => alert(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª: ${protocol.title}`);
  const handleDelete = (protocol) => alert(`–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª: ${protocol.title}`);
  const handleShare = (protocol) => {
    navigator.clipboard.writeText(window.location.origin + '/protocol/' + protocol.id);
    alert('–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
  };

  return (
    <Box>
      <Typography variant="h4" sx={{ mb: 2 }}>–ú–æ–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã</Typography>
      <Button variant="contained" color="primary" sx={{ mb: 3 }} onClick={() => alert('–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª (–∑–∞–≥–ª—É—à–∫–∞)')}>–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª</Button>
      <Stack spacing={3}>
        {protocols.map(protocol => (
          <Paper key={protocol.id} sx={{ p: 3, borderRadius: 3 }}>
            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
              <Typography variant="h5" sx={{ fontWeight: 700, mr: 2 }}>{protocol.icon} {protocol.title}</Typography>
              <Stack direction="row" spacing={1}>
                {protocol.tags.map(tag => <Chip key={tag} label={tag} size="small" color="primary" />)}
              </Stack>
            </Box>
            <Typography variant="body1" sx={{ mb: 2 }}>{protocol.description}</Typography>
            <List>
              {protocol.steps.map((step, idx) => (
                <ListItem key={idx}>
                  <span style={{ fontSize: 24, marginRight: 12 }}>{step.icon}</span> {step.text}
                </ListItem>
              ))}
            </List>
            <Divider sx={{ my: 2 }} />
            <Stack direction="row" spacing={2}>
              <Button variant="outlined" startIcon={<ContentCopyIcon />} onClick={() => handleFork(protocol)}>Fork</Button>
              <Button variant="outlined" startIcon={<EditIcon />} onClick={() => handleEdit(protocol)}>Edit</Button>
              <Button variant="outlined" color="error" startIcon={<DeleteIcon />} onClick={() => handleDelete(protocol)}>Delete</Button>
              <Button variant="outlined" startIcon={<ShareIcon />} onClick={() => handleShare(protocol)}>Share</Button>
            </Stack>
          </Paper>
        ))}
      </Stack>
    </Box>
  );
} 