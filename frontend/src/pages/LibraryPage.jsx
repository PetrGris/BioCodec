import React, { useEffect, useState } from 'react';
import axios from 'axios';
import LibrarySection from '../components/LibrarySection';
import LibraryFilters from '../components/LibraryFilters';
import { Box, Typography, CircularProgress, Alert } from '@mui/material';

const fallbackData = [
  {
    id: 1,
    title: "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞",
    description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–Ω–∏–≥–∏",
    type: "–∫–Ω–∏–≥–∞",
    icon: "üìñ",
    cover_url: "https://images.unsplash.com/photo-1512820790803-83ca734da794",
    link: "https://example.com/book",
    tags: ["—Ç–µ—Å—Ç", "–∫–Ω–∏–≥–∞"],
    author: "–¢–µ—Å—Ç –ê–≤—Ç–æ—Ä",
    rating: 4.5
  },
  {
    id: 2,
    title: "–¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—Å",
    description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞",
    type: "–∫—É—Ä—Å",
    icon: "üéì",
    cover_url: "https://images.unsplash.com/photo-1503676382389-4809596d5290",
    link: "https://example.com/course",
    tags: ["—Ç–µ—Å—Ç", "–∫—É—Ä—Å"],
    author: "–¢–µ—Å—Ç –ê–∫–∞–¥–µ–º–∏—è",
    rating: 4.7
  },
  {
    id: 3,
    title: "–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
    description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
    type: "–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
    icon: "üíâ",
    cover_url: "https://images.unsplash.com/photo-1515378791036-0648a3ef77b2",
    link: "https://example.com/app",
    tags: ["—Ç–µ—Å—Ç", "–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"],
    author: "–¢–µ—Å—Ç –ö–æ–º–∞–Ω–¥–∞",
    rating: 4.2
  },
  {
    id: 4,
    title: "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª",
    description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞",
    type: "–ø—Ä–æ—Ç–æ–∫–æ–ª",
    icon: "üò¥",
    cover_url: "https://images.unsplash.com/photo-1464983953574-0892a716854b",
    link: "https://example.com/protocol",
    tags: ["—Ç–µ—Å—Ç", "–ø—Ä–æ—Ç–æ–∫–æ–ª"],
    author: "–¢–µ—Å—Ç –õ–∞–±",
    rating: 4.8
  }
];

const TYPE_LABELS = {
  "–∫–Ω–∏–≥–∞": "–ö–Ω–∏–≥–∏",
  "–∫—É—Ä—Å": "–ö—É—Ä—Å—ã",
  "–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ": "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
  "–ø—Ä–æ—Ç–æ–∫–æ–ª": "–ü—Ä–æ—Ç–æ–∫–æ–ª—ã"
};

export default function LibraryPage() {
  const [items, setItems] = useState([]);
  const [loading, setLoading] = useState(true);
  const [filters, setFilters] = useState({ type: '', tag: '', q: '' });
  const [error, setError] = useState(null);
  const [raw, setRaw] = useState(null);

  useEffect(() => {
    setLoading(true);
    setError(null);
    setRaw(null);
    const url = '/library';
    const params = { ...filters, type: filters.type || undefined, tag: filters.tag || undefined, q: filters.q || undefined };
    axios
      .get(url, { params })
      .then(res => {
        setRaw(res.data);
        if (Array.isArray(res.data)) {
          setItems(res.data);
        } else {
          setError('–û—à–∏–±–∫–∞: backend –≤–µ—Ä–Ω—É–ª –Ω–µ –º–∞—Å—Å–∏–≤. –¢–∏–ø: ' + typeof res.data);
          setItems(fallbackData);
        }
      })
      .catch(e => {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ' + e.message + ' (–ø–æ–∫–∞–∑–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)');
        setItems(fallbackData);
      })
      .finally(() => setLoading(false));
  }, [filters]);

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø—É
  const grouped = items.reduce((acc, item) => {
    if (!acc[item.type]) acc[item.type] = [];
    acc[item.type].push(item);
    return acc;
  }, {});

  return (
    <Box sx={{ p: 3, maxWidth: 900, mx: 'auto' }}>
      <Typography variant="h4" sx={{ mb: 2, fontWeight: 700 }}>
        üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞
      </Typography>
      <LibraryFilters filters={filters} setFilters={setFilters} />
      {loading ? (
        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>
          <CircularProgress />
        </Box>
      ) : error ? (
        <Alert severity="error" sx={{ mt: 4 }}>{error}
          <Box sx={{ mt: 2, fontSize: 12, color: 'gray', wordBreak: 'break-all' }}>
            <b>–°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ backend:</b>
            <pre>{JSON.stringify(raw, null, 2)}</pre>
          </Box>
        </Alert>
      ) : items.length === 0 ? (
        <Alert severity="info" sx={{ mt: 4 }}>–ù–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º.</Alert>
      ) : (
        Object.entries(TYPE_LABELS).map(([type, label]) => (
          <LibrarySection key={type} title={label} items={grouped[type] || []} />
        ))
      )}
    </Box>
  );
} 